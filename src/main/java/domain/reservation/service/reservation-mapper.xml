<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="domain.reservation.service.ReservationMapper">
  <resultMap type="domain.reservation.vo.ReservationVO" id="reservationMap">
    <id property="reservationId" column="reservation_id"/>
    <result property="restaurantId" column="restaurant_id"/>
    <result property="memberId" column="member_id"/>
    <result property="reservationTime" column="reservation_time"/>
    <result property="personnel" column="personnel"/>
    <result property="requestContent" column="request_content"/>
    <result property="alterName" column="name"/>
    <result property="alterTel" column="tel"/>
    <result property="status" column="status"/>
  </resultMap>

  <insert id="reservationInsert" parameterType="domain.reservation.vo.ReservationVO">
    <selectKey keyProperty="reservationId" resultType="long" order="BEFORE">
      SELECT reservation_id_seq.nextval AS reservation_id FROM DUAL
    </selectKey>
    insert into reservation(reservation_id, member_id, restaurant_id, reservation_time, personnel,
    request_content, name, tel, status)
    values (#{reservationId}, #{memberId}, #{restaurantId}, #{reservationTime}, #{personnel},
    #{requestContent}, #{alterName}, #{alterTel}, 'WAITING_FOR_ACCEPT')

  </insert>

  <update id="acceptReservation" parameterType="domain.reservation.vo.ReservationVO">
    update reservation
    set status = #{status}
    where reservation_id = #{reservationId}
  </update>

  <delete id="reservationDelete" parameterType="domain.reservation.vo.ReservationVO">
    delete
    from reservation
    where reservation_id = #{reservationId}
  </delete>

  <select id="findByMemberId" parameterType="domain.reservation.vo.ReservationVO"
    resultType="domain.reservation.vo.ReservationVO">
    select *
    from reservation
    where member_id = #{managerId}
  </select>

  <select id="reservationSelect" resultMap="reservationMap"
    resultType="domain.reservation.vo.ReservationVO">
    select *
    from reservation
    where reservation_Id = #{reservationId}
  </select>

  <select id="reservationList" resultMap="reservationMap">
    select *
    from reservation
  </select>
  <select id="findNotApprovedByRestaurantId"
    parameterType="long" resultMap="reservationMap">
    select *
    from reservation
    where STATUS = 'WAITING_FOR_ACCEPT' AND RESTAURANT_ID = ${restaurantId}
  </select>
</mapper>